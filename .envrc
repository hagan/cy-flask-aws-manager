## https://direnv.net/

_PWD=$(pwd)
_APP=`echo $_PWD | grep -Eo -i '([[:alnum:]-]*)$'`
echo "Starting $_APP environment..."
export PATH="$_PWD/bin:$_PWD/node_modules/.bin:$PATH"

[ -f .env ] && source .env || { echo "Missing .env!"; exit 1; }
## Export all VARS in .env
ALL_ENV_PRJ_VARS=($(grep -E '^[[:space:]]*[A-Z_][A-Z0-9_]*[[:space:]]*=' .env | cut -f1 -d"=" | tr '\n' ' '))
for idx in "${!ALL_ENV_PRJ_VARS[@]}"; do
#   echo "idx: $idx :: ${ALL_ENV_PRJ_VARS[idx]}=${!ALL_ENV_PRJ_VARS[idx]}"
  eval "export ${ALL_ENV_PRJ_VARS[idx]}='${!ALL_ENV_PRJ_VARS[idx]}'"
done

export FLASK_APP='awsmgr.app'

POETRY_VENV_NAME=$(poetry env list | cut -d' ' -f1)

# to delete venv: poetry env remove $(poetry env list | cut -d' ' -f1)
if [[ -z ${POETRY_VENV_NAME} ]]; then
  poetry install
fi

# POETRY_VENV_PATH=$(poetry env info -p)
# export PATH="$POETRY_VENV_PATH/bin:$PATH"
# echo "POETRY_VENV_PATH = $POETRY_VENV_PATH"
# if [[ ! -z "$POETRY_VENV_PATH" ]] && [[ -f "$POETRY_VENV_PATH/bin/activate" ]]; then
#   export VIRTUAL_ENV_DISABLE_PROMPT=1
#   . $POETRY_VENV_PATH/bin/activate
# fi